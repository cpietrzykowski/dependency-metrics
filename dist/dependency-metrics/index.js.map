{"version":3,"sources":["../../src/index.js"],"names":["config","createNpmRegistryApiClient","client","baseuri","params","name","pkg","replace","_","$1","encodeURIComponent","Promise","resolve","reject","get","err","data","raw","res","npmRegistryClient","fetchNpmPackageVitals","version","then","latest","latestReleaseDate","latestRepoUrl","createGithubApiClient","accessToken","authenticate","githubApiClient","process","env","GITHUB_ACCESSTOKEN","fetchGithubRepositoryVitals","owner","repo","repos","response","createdAt","updatedAt","full_name","fetchDependencyVitals","dependencies","tasks","npmmemo","ghmemo","meta","Object","keys","map","category","vitals","push","npmmeta","npmrelease","fromNow","matches","match","repoid","split","from","all","argv","length","inputPath","stat","stats","infoFile","isDirectory","join","console","log","readFile","json","JSON","parse","deps","reduce","memo","key","concat","sort","a","b","localeCompare","forEach","packages","package","updated","github","stars","age","catch","reason"],"mappings":"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","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport NpmClient from 'npm-registry-client';\nimport moment from 'moment';\nimport dotenv from 'dotenv';\nimport octokit from '@octokit/rest';\n\ndotenv.config();\n\n/**\n * @return {NpmClient}\n */\nfunction createNpmRegistryApiClient() {\n  const config = {};\n  const client = new NpmClient(config);\n  const baseuri = 'https://registry.npmjs.org/';\n  const params = { 'timeout': 1000 };\n\n  return function(name) {\n    // encode scoped package name\n    const pkg = name.replace(/@(.*)/, function(_, $1) {\n      return `@${encodeURIComponent($1)}`;\n    });\n\n    return new Promise(function(resolve, reject) {\n      // fetch npm registry data\n      client.get(`${baseuri}${pkg}`, params, function(err, data, raw, res) {\n        if (err) return reject(err);\n        return resolve(data);\n      });\n    });\n  };\n}\n\nconst npmRegistryClient = createNpmRegistryApiClient();\n\n/**\n * @param {string} pkg\n * @param {string} version\n * @return {object}\n */\nfunction fetchNpmPackageVitals(pkg, version) {\n  return npmRegistryClient(pkg).then(function(data) {\n    const name = data['name'];\n    const latest = data['dist-tags']['latest'];\n    const latestReleaseDate = moment(data['time'][latest]);\n    const latestRepoUrl = data['versions'][latest]['repository']['url'];\n\n    // now fetch repo meta if possible\n    return {\n      name,\n      'latest': {\n        'version': latest,\n        'release': latestReleaseDate,\n        'repo': latestRepoUrl,\n      },\n    };\n  });\n}\n\n/**\n * @param {string} accessToken\n * @return {octokit}\n */\nfunction createGithubApiClient(accessToken) {\n  const client = octokit();\n  if (accessToken) {\n    client.authenticate({\n      'type': 'token',\n      'token': accessToken,\n    });\n  }\n\n  return client;\n}\n\nconst githubApiClient = createGithubApiClient(process.env.GITHUB_ACCESSTOKEN);\n\n/**\n *\n * @param {string} owner\n * @param {string} repo\n * @return {Promise}\n */\nfunction fetchGithubRepositoryVitals(owner, repo) {\n  return githubApiClient.repos.get({ owner, repo }).then(function(response) {\n    const { data } = response;\n    // const defaultBranch = data['default_branch'];\n    const createdAt = moment(data['created_at']);\n    const updatedAt = moment(data['updated_at']);\n\n    return {\n      'name': data.full_name,\n      'created': createdAt,\n      'updated': updatedAt,\n      'stars': data['stargazers_count'],\n    };\n  });\n}\n\n/**\n *\n * @param {Object} dependencies object keyed by dependency category\n * @return {Promise}\n */\nfunction fetchDependencyVitals(dependencies) {\n  const tasks = [];\n  const npmmemo = {}; // npm registry: {pkg: vitals}\n  const ghmemo = {}; // github: {repo: vitals}\n\n  const meta = Object.keys(dependencies).map(function(category) {\n    return {\n      category,\n      'packages': Object.keys(dependencies[category]).map(function(pkg) {\n        const vitals = { 'package': pkg };\n        const version = dependencies[category][pkg];\n\n        // the jury is still out on the cleverness or smell of this pattern\n        // - this should be refactored for source readability\n        //\n        // queue up network tasks capturing 'vitals' to modify\n        tasks.push(\n          new Promise(function(resolve, reject) {\n            if (pkg in npmmemo) {\n              return resolve(npmmemo[pkg]);\n            }\n\n            return fetchNpmPackageVitals(pkg, version).then(function(meta) {\n              npmmemo[pkg] = meta;\n              return resolve(meta);\n            });\n          }).then(function(npmmeta) {\n            vitals['name'] = npmmeta['name']; // should be identical to 'pkg'\n            vitals['version'] = `${npmmeta['latest']['version']} (${version})`;\n            const npmrelease = npmmeta['latest']['release'];\n            vitals[\n              'updated'\n            ] = `Updated: ${npmrelease.fromNow()} (${npmrelease})`;\n            const repo = npmmeta['latest']['repo'];\n            const matches = repo.match(/.*github.com\\/(.*)\\.git/);\n\n            // github network step\n            if (matches) {\n              return new Promise(function(resolve, reject) {\n                const repoid = matches[1]; // owner/repo\n                if (repoid in ghmemo) {\n                  return resolve(ghmemo[repoid]);\n                }\n\n                const [owner, repo] = repoid.split('/');\n                return fetchGithubRepositoryVitals(owner, repo).then(function(\n                  meta\n                ) {\n                  ghmemo[repoid] = meta;\n                  return resolve(meta);\n                });\n              }).then(function(meta) {\n                vitals['github'] = {\n                  repo,\n                  'name': meta['name'],\n                  'stars': meta['stars'],\n                  'age': `${meta['created'].from(meta['updated'], true)}`,\n                  'updated': `Updated: ${meta['updated'].fromNow()} (${\n                    meta['updated']\n                  })`,\n                };\n\n                return vitals;\n              });\n            }\n\n            return vitals;\n          })\n        );\n\n        return vitals;\n      }),\n    };\n  });\n\n  return Promise.all(tasks).then(function() {\n    return meta;\n  });\n}\n\n// clui driver for 'package.json\"\nif (process.argv.length > 2) {\n  const inputPath = process.argv[2];\n  fs.stat(inputPath, function(err, stats) {\n    let infoFile = inputPath;\n    if (stats.isDirectory()) {\n      infoFile = `${path.join(inputPath, 'package.json')}`;\n    }\n\n    console.log(`reading ${infoFile}...`);\n    fs.readFile(infoFile, null, function(err, data) {\n      if (err) throw err;\n      const json = JSON.parse(data);\n      const deps = Object.keys(json).reduce(function(memo, key) {\n        if (key.match(/.*dependenc.*/i)) {\n          memo[key] = json[key];\n        }\n\n        return memo;\n      }, {});\n\n      fetchDependencyVitals(deps)\n        .then(function(vitals) {\n          vitals\n            .concat()\n            .sort(function(a, b) {\n              return a.category.localeCompare(b.category);\n            })\n            .forEach(function(category) {\n              console.log(`=== ${category.category}`);\n\n              category.packages\n                .concat()\n                .sort(function(a, b) {\n                  return a.name.localeCompare(b.name);\n                })\n                .forEach(function(pkg) {\n                  console.log(`${pkg.package}@${pkg.version}`);\n                  console.log(`${pkg.updated}`);\n\n                  if ('github' in pkg) {\n                    console.log(\n                      `${pkg.github.repo}, ${pkg.github.stars} stars, ${\n                        pkg.github.age\n                      }`\n                    );\n                    console.log(`${pkg.github.updated}`);\n                  }\n\n                  console.log();\n                });\n\n              console.log();\n            });\n        })\n        .catch(function(reason) {\n          console.log(reason);\n        });\n    });\n  });\n} else {\n  console.log('missing input');\n}\n"]}